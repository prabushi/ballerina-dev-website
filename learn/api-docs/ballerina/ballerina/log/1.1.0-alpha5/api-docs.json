{"docsData":{"releaseShortVersion":"","packages":[{"description":"## Package Overview\n\nThis package provides a basic API for logging.\n\n### Log record \n\nA log record contains the timestamp, log level, module name, and the log message.\nUsers can pass any number of key/value pairs which needs to be displayed in the log message.\nThese can be of `anydata` type including int, string and boolean.\n\nA sample log record logged from the `foo` module would look as follows:\n```bash\ntime \u003d 2020-12-16 11:22:44,029 level \u003d ERROR module \u003d myorg/foo message \u003d \"Something went wrong.\"\n```\n\n### Log Output\n\nLogs are written to the `stderr` stream (i.e., the console) by default in order to make the logs more container friendly.\n\nTo publish the logs to a file, redirect the `stderr` stream to a file.\n```bash\n$ ballerina run program.bal 2\u003e b7a-user.log\n```\n\nTo set the output format to JSON, place the entry given below in the `Config.toml` file.\n\n```\n[log]\nformat \u003d \"json\"\n```\n\n### Log Levels\n\nThis package provides functions to log at four levels, which are `DEBUG`, `ERROR`, `INFO`, and `WARN`. By default, all log messages are  logged to the console at the `INFO` level. \n\nThe log level can be configured via a Ballerina configuration file.\nTo set the global log level, place the entry given below in the Config.toml file:\n\n```\n[log]\nlevel \u003d \"[LOG_LEVEL]\"\n```\n\nEach module can also be assigned its own log level. To assign a log level to a module, provide the following entry in the Config.toml file:\n\n```\n[[log.modules]]\nname \u003d \"[MODULE_NAME]\"\nlevel \u003d \"[LOG_LEVEL]\"\n```\n\nFor information on the operation, which you can perform with this package, see the below Function. For examples on the usage of the operation, see [Log Api](https://ballerina.io/learn/by-example/log-api.html).\n","modules":[{"id":"log","summary":"","description":"","orgName":"ballerina","version":"1.1.0-alpha5","records":[{"fields":[{"defaultValue":"","isReadOnly":false,"type":{"version":"slalpha3","name":"never","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"msg","description":"msg which cannot be a key\n","isDeprecated":false},{"defaultValue":"","isReadOnly":false,"type":{"version":"slalpha3","name":"never","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"\u0027error","description":"\u0027error which cannot be a key\n","isDeprecated":false}],"isClosed":true,"name":"KeyValues","description":"Key-Value pairs that needs to be desplayed in the log.\n\n","isDeprecated":false}],"classes":[],"objectTypes":[],"clients":[],"listeners":[],"functions":[{"isIsolated":true,"isRemote":false,"isExtern":false,"builtInVersion":"slalpha3","parameters":[{"defaultValue":"","isReadOnly":false,"type":{"version":"slalpha3","name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"msg","description":"The message to be logged\n","isDeprecated":false},{"defaultValue":"()","isReadOnly":false,"type":{"version":"slalpha3","name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"\u0027error","description":"The error struct to be logged\n","isDeprecated":false}],"returnParameters":[],"name":"printDebug","description":"Prints debug logs.\n```ballerina\nlog:printDebug(\"debug message\", id \u003d 845315)\n```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"builtInVersion":"slalpha3","parameters":[{"defaultValue":"","isReadOnly":false,"type":{"version":"slalpha3","name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"msg","description":"The message to be logged\n","isDeprecated":false},{"defaultValue":"()","isReadOnly":false,"type":{"version":"slalpha3","name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"\u0027error","description":"The error struct to be logged\n","isDeprecated":false}],"returnParameters":[],"name":"printError","description":"Prints error logs.\n```ballerina\nerror e \u003d error(\"error occurred\");\nlog:printError(\"error log with cause\", \u0027error \u003d e, id \u003d 845315);\n```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"builtInVersion":"slalpha3","parameters":[{"defaultValue":"","isReadOnly":false,"type":{"version":"slalpha3","name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"msg","description":"The message to be logged\n","isDeprecated":false},{"defaultValue":"()","isReadOnly":false,"type":{"version":"slalpha3","name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"\u0027error","description":"The error struct to be logged\n","isDeprecated":false}],"returnParameters":[],"name":"printInfo","description":"Prints info logs.\n```ballerina\nlog:printInfo(\"info message\", id \u003d 845315)\n```\n\n","isDeprecated":false},{"isIsolated":true,"isRemote":false,"isExtern":false,"builtInVersion":"slalpha3","parameters":[{"defaultValue":"","isReadOnly":false,"type":{"version":"slalpha3","name":"string","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"msg","description":"The message to be logged\n","isDeprecated":false},{"defaultValue":"()","isReadOnly":false,"type":{"version":"slalpha3","name":"error","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":true,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},"name":"\u0027error","description":"The error struct to be logged\n","isDeprecated":false}],"returnParameters":[],"name":"printWarn","description":"Prints warn logs.\n```ballerina\nlog:printWarn(\"warn message\", id \u003d 845315)\n```\n\n","isDeprecated":false}],"constants":[],"annotations":[],"errors":[],"types":[{"name":"Value","description":"A value of anydata type\n","isAnonymousUnionType":true,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[{"version":"slalpha3","name":"anydata","category":"builtin","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0},{"orgName":"ballerina","moduleName":"log","version":"1.1.0-alpha5","name":"Valuer","category":"not_found","isAnonymousUnionType":false,"isArrayType":false,"isNullable":false,"isTuple":false,"isIntersectionType":false,"isParenthesisedType":false,"isTypeDesc":false,"isRestParam":false,"isLambda":false,"isDeprecated":false,"generateUserDefinedTypeLink":true,"memberTypes":[],"paramTypes":[],"arrayDimensions":0}],"paramTypes":[],"arrayDimensions":0}],"enums":[]}],"name":"log","orgName":"ballerina","version":"1.1.0-alpha5","summary":"This package provides a basic API for logging.\n"}],"builtinTypes":[],"keywords":[]},"searchData":{"modules":[{"id":"log","description":"","orgName":"ballerina","version":"1.1.0-alpha5"}],"classes":[],"functions":[{"id":"printDebug","description":"Prints debug logs.","moduleId":"log","moduleOrgName":"ballerina","moduleVersion":"1.1.0-alpha5"},{"id":"printError","description":"Prints error logs.","moduleId":"log","moduleOrgName":"ballerina","moduleVersion":"1.1.0-alpha5"},{"id":"printInfo","description":"Prints info logs.","moduleId":"log","moduleOrgName":"ballerina","moduleVersion":"1.1.0-alpha5"},{"id":"printWarn","description":"Prints warn logs.","moduleId":"log","moduleOrgName":"ballerina","moduleVersion":"1.1.0-alpha5"}],"records":[{"id":"KeyValues","description":"Key-Value pairs that needs to be desplayed in the log.","moduleId":"log","moduleOrgName":"ballerina","moduleVersion":"1.1.0-alpha5"}],"constants":[],"errors":[],"types":[{"id":"Value","description":"A value of anydata type\n","moduleId":"log","moduleOrgName":"ballerina","moduleVersion":"1.1.0-alpha5"}],"clients":[],"listeners":[],"annotations":[],"objectTypes":[],"enums":[]}}